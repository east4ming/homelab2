apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f compose.yaml convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f compose.yaml convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: postgresql
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: lobechat
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lobe-db-secrets
                  key: PGVECTOR_POSTGRES_PASSWORD
          image: pgvector/pgvector:pg16
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/bin/pg_isready
                - -U
                - postgres
            failureThreshold: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: lobe-postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-claim0
          resources:
            requests:
              cpu: 10m
              memory: 117Mi
            limits:
              memory: 117Mi
      initContainers:
        - command:
            - rm
            - -rf
            - /var/lib/postgresql/data/lost+found
          image: busybox
          imagePullPolicy: IfNotPresent
          name: chown-data
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-claim0
      restartPolicy: Always
      volumes:
        - name: postgresql-claim0
          persistentVolumeClaim:
            claimName: postgresql-claim0
