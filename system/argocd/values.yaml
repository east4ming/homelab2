argo-cd:
  global:
    domain: argocd.west-beta.ts.net
  configs:
    params:
      server.insecure: true
      controller.diff.server.side: true
    cm:
      resource.ignoreResourceUpdatesEnabled: true
      resource.customizations.ignoreResourceUpdates.all: |
        jsonPointers:
          - /status
  server:
    ingress:
      enabled: true
      ingressClassName: tailscale
      tls: true
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: true
  dex:
    enabled: false
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
      rules:
        enabled: true
        spec:
          - alert: ArgoAppMissing
            expr: |
              absent(argocd_app_info) == 1
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: "[Argo CD] No reported applications"
              description: >
                Argo CD has not reported any applications data for the past 15 minutes which
                means that it must be down or not functioning properly.  This needs to be
                resolved for this cloud to continue to maintain state.
          - alert: ArgoAppNotSynced
            expr: |
              argocd_app_info{sync_status!="Synced"} == 1
            for: 12h
            labels:
              severity: warning
            annotations:
              summary: "[{{ $labels.name }}] Application not synchronized"
              description: >
                The application [{{ $labels.name }}] has not been synchronized for over
                12 hours which means that the state of this cloud has drifted away from the
                state inside Git.
  repoServer:
    metrics: *metrics
  redis:
    metrics: *metrics
    image:
      repository: docker.io/redis
  applicationSet:
    metrics: *metrics
  notifications:
    metrics: *metrics
argocd-apps:
  applicationsets:
    root:
      namespace: argocd
      generators:
        - git:
            # TODO:
            repoURL: &repoURL http://gitea-http.gitea:3000/ops/homelab2
            revision: &revision master
            directories:
              - path: system/*
              - path: platform/*
              - path: apps/*
      template:
        metadata:
          name: "{{path.basename}}"
        spec:
          destination:
            name: in-cluster
            namespace: "{{path.basename}}"
          project: default # TODO
          source:
            repoURL: *repoURL
            path: "{{path}}"
            targetRevision: *revision
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            retry:
              limit: 10
              backoff:
                duration: 1m
                factor: 2
                maxDuration: 16m
            syncOptions:
              - CreateNamespace=true
              - ApplyOutOfSyncOnly=true
              - ServerSideApply=true
            managedNamespaceMetadata:
              annotations:
                # Enable privileged VolSync movers by default for all namespaces
                # TODO this may be refactored in the future for finer granularity
                # See also https://volsync.readthedocs.io/en/stable/usage/permissionmodel.html
                volsync.backube/privileged-movers: "true"
          ignoreDifferences:
            - kind: Service
              jsonPointers:
                - /spec/externalName
